{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\GitHub_Projects\\\\guessthecode\\\\clientside\\\\src\\\\pages\\\\Home.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex h-screen bg-gray-900 items-center justify-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/login\",\n        className: \"text-white text-2xl font-semibold mb-4 hover:text-blue-300\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/register\",\n        className: \"text-white text-2xl font-semibold hover:text-blue-300\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-8 text-white text-lg\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-semibold mb-4\",\n          children: \"How to Play Mastermind\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Mastermind is a code-breaking game for two players. One player creates a secret code consisting of a sequence of colored pegs, and the other player tries to guess the code within a certain number of turns.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2\",\n          children: \"After each guess, the creator of the code provides feedback in the form of colored markers:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-disc list-inside mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"A black marker means a correct color in the correct position.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"A white marker means a correct color in the wrong position.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2\",\n          children: \"The game continues until the guesser guesses the code correctly or runs out of turns.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","axios","useEffect","useState","jsxDEV","_jsxDEV","Home","className","children","href","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/GitHub_Projects/guessthecode/clientside/src/pages/Home.js"],"sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction Home() {\r\n \r\n  return (\r\n    <div className=\"flex h-screen bg-gray-900 items-center justify-center\">\r\n    <div className=\"flex flex-col items-center\">\r\n      <a href=\"/login\" className=\"text-white text-2xl font-semibold mb-4 hover:text-blue-300\">\r\n        Login\r\n      </a>\r\n      <a href=\"/register\" className=\"text-white text-2xl font-semibold hover:text-blue-300\">\r\n        Register\r\n      </a>\r\n      <div className=\"mt-8 text-white text-lg\">\r\n        <h2 className=\"text-2xl font-semibold mb-4\">How to Play Mastermind</h2>\r\n        <p>\r\n          Mastermind is a code-breaking game for two players. One player creates a secret code\r\n          consisting of a sequence of colored pegs, and the other player tries to guess the code\r\n          within a certain number of turns.\r\n        </p>\r\n        <p className=\"mt-2\">\r\n          After each guess, the creator of the code provides feedback in the form of colored\r\n          markers:\r\n        </p>\r\n        <ul className=\"list-disc list-inside mt-2\">\r\n          <li>A black marker means a correct color in the correct position.</li>\r\n          <li>A white marker means a correct color in the wrong position.</li>\r\n        </ul>\r\n        <p className=\"mt-2\">\r\n          The game continues until the guesser guesses the code correctly or runs out of turns.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n        \r\n      \r\n   \r\n  );\r\n}\r\n\r\nexport default Home;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,IAAIA,CAAA,EAAG;EAEd,oBACED,OAAA;IAAKE,SAAS,EAAC,uDAAuD;IAAAC,QAAA,eACtEH,OAAA;MAAKE,SAAS,EAAC,4BAA4B;MAAAC,QAAA,gBACzCH,OAAA;QAAGI,IAAI,EAAC,QAAQ;QAACF,SAAS,EAAC,4DAA4D;QAAAC,QAAA,EAAC;MAExF;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJR,OAAA;QAAGI,IAAI,EAAC,WAAW;QAACF,SAAS,EAAC,uDAAuD;QAAAC,QAAA,EAAC;MAEtF;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACJR,OAAA;QAAKE,SAAS,EAAC,yBAAyB;QAAAC,QAAA,gBACtCH,OAAA;UAAIE,SAAS,EAAC,6BAA6B;UAAAC,QAAA,EAAC;QAAsB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvER,OAAA;UAAAG,QAAA,EAAG;QAIH;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACJR,OAAA;UAAGE,SAAS,EAAC,MAAM;UAAAC,QAAA,EAAC;QAGpB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACJR,OAAA;UAAIE,SAAS,EAAC,4BAA4B;UAAAC,QAAA,gBACxCH,OAAA;YAAAG,QAAA,EAAI;UAA6D;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtER,OAAA;YAAAG,QAAA,EAAI;UAA2D;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClE,CAAC,eACLR,OAAA;UAAGE,SAAS,EAAC,MAAM;UAAAC,QAAA,EAAC;QAEpB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAKR;AAACC,EAAA,GApCQR,IAAI;AAsCb,eAAeA,IAAI;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}